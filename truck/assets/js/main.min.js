var mySwiper = new Swiper('.characteristics__slider', { //FIXME funcking slider. поискать чего попроще
    loop: true,
    slidesPerView: 'auto',
    spaceBetween: 20,
    loopedSlides: 5,
    allowTouchMove: false,
    autoHeight: true,
    centeredSlides: true,
    // autoplay: {
    //     delay: 3000
    // }
});

const $mark = document.querySelector('#svgMapMark');
const $dots = document.querySelectorAll('.svg-map-dot');
const $regions = document.querySelectorAll('.svg-map-region');

const $citiesInfo = document.querySelectorAll('.dealer__info');
const dotsData = [];
for (let i = 0; i < $dots.length; i++) {
    const obj = {
        x: parseInt($dots[i].getAttribute('cx')),
        y: parseInt($dots[i].getAttribute('cy')),
        r: parseInt($dots[i].getAttribute('r')),
    };
    dotsData.push(obj);
    const setMarkFunc = setMark.bind(null, i);
    $dots[i].addEventListener('click', setMarkFunc);
    $regions[i].addEventListener('click', setMarkFunc);
}
if (window.innerWidth <=767) {
    for (let i = 0; i < $dots.length; i++) {
        const currentR = $dots[i].getAttribute('r');
        $dots[i].setAttribute('r', currentR * 2);
    }
}

setMark(0);
function setMark(ind) {
    let offsetX = +$mark.getAttribute('width') / 2;
    let offsetY = +$mark.getAttribute('height');
    for (let i = 0; i < $dots.length; i++) {
        $dots[i].classList.remove('hidden');
        $citiesInfo[i].classList.add('hidden');
    }
    $dots[ind].classList.add('hidden');
    $citiesInfo[ind].classList.remove('hidden');
    $mark.setAttribute('x', dotsData[ind].x - offsetX);
    $mark.setAttribute('y', dotsData[ind].y - offsetY);   
}

const $burger = document.querySelector('#burger');
const $headerMenu = document.querySelector('#headerMenu');
const $body = document.body;
$burger.addEventListener('click', function() {
    if ($burger.classList.contains('active')) {
        closeMenu();
    } else {
        openMenu();
    }
});
function closeMenu() {
    $burger.classList.remove('active');
    $headerMenu.classList.remove('active');
    $body.classList.remove('lock');
}
function openMenu() {
    $burger.classList.add('active');
    $headerMenu.classList.add('active');
    $body.classList.add('lock');
}

const $popup = document.querySelector('#popupRequest');
const $callPopupBtns = document.querySelectorAll('.call-popup');
for (let i = 0; i < $callPopupBtns.length; i++) {
    $callPopupBtns[i].addEventListener('click', function() {
        showPopup();
    });
    $popup.addEventListener('click', function() {
        if (event.target.id === 'popupRequest') {
            hidePopup();
        }
    });
}

function showPopup() {
    $popup.classList.add('active');
    $popup.classList.add('fade-in');
    $body.classList.add('lock');
}
function hidePopup() {
    $popup.classList.remove('fade-in');
    $popup.classList.add('fade-out');
    function removing() {
        $popup.classList.remove('active');
        $popup.classList.remove('fade-out');
        $body.classList.remove('lock');
        $popup.removeEventListener('animationend', removing);
    }
    $popup.addEventListener('animationend', removing);
}

//# sourceMappingURL=maps/main.min.js.map
