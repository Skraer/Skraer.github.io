{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["class GateForm {\r\n    constructor(selector, {onSubmit}) {\r\n        this.el = document.querySelector(selector);\r\n        this.btn = this.el.querySelector('.gate-form__submit');\r\n        this.onSubmit = onSubmit || function(){};\r\n        this.setup();\r\n    }\r\n    getFormData() {\r\n        const inputs = this.el.querySelectorAll('input');\r\n        // const names = new Set();\r\n        const data = {};\r\n        let allow = true;\r\n        inputs.forEach(input => {\r\n            const name = input.getAttribute('name');\r\n            // names.add(name);\r\n            if ((input.getAttribute('type') === 'checkbox' || input.getAttribute('type') === 'radio') && input.checked) {\r\n                data[name] = input.value;\r\n            } else if ((input.getAttribute('type') === 'number' || input.getAttribute('type') === 'text') && input.value.length > 0) {\r\n                data[name] = input.value;\r\n            }\r\n\r\n        });\r\n        inputs.forEach(input => {\r\n            const name = input.getAttribute('name');\r\n            if (!data[name] && input.getAttribute('type') !== 'checkbox') {\r\n                allow = false;\r\n            }\r\n        });\r\n        return allow ? data : false;\r\n    }\r\n    getInputs(data) {\r\n        const inputs = [];\r\n        for (let key in data) {\r\n            const input = document.createElement('input');\r\n            input.setAttribute('type', 'hidden');\r\n            input.setAttribute('name', key);\r\n            input.setAttribute('value', data[key]);\r\n            inputs.push(input);\r\n        }\r\n        return inputs;\r\n    }\r\n    changeImage() {\r\n        const img = this.el.querySelector('.gate-form__img img');\r\n        const newSrc = img.getAttribute('data-src');\r\n        const oldSrc = img.getAttribute('src');\r\n        img.setAttribute('data-src', oldSrc);\r\n        img.setAttribute('src', newSrc);\r\n        \r\n    }\r\n    _setupInputs() {\r\n        const setOutput = (name, val) => {\r\n            const span = this.el.querySelector('.output span[data-output=\"' + name + '\"]');\r\n            span.innerText = val;\r\n        }\r\n        const cb = this.el.querySelectorAll('input[type=checkbox]');\r\n        const radio = this.el.querySelectorAll('input[type=radio]');\r\n        const number = this.el.querySelectorAll('input[type=number]');\r\n        cb.forEach(inp => {\r\n            inp.addEventListener('change', e => {\r\n                inp.checked ?\r\n                    setOutput(inp.getAttribute('name'), 'Да') :\r\n                    setOutput(inp.getAttribute('name'), 'Нет');\r\n            });\r\n        });\r\n        radio.forEach(inp => {\r\n            inp.addEventListener('change', e => {\r\n                setOutput(inp.getAttribute('name'), inp.value);\r\n                if (inp.getAttribute('name') == 'own-type') {\r\n                    console.log(true);\r\n                    this.changeImage();\r\n                }\r\n            });\r\n        });\r\n        number.forEach(inp => {\r\n            inp.addEventListener('change', e => {\r\n                setOutput(inp.getAttribute('name'), inp.value);\r\n            });\r\n        });\r\n\r\n    }\r\n    setup() {\r\n        this.el.addEventListener('submit', e => {\r\n            e.preventDefault();\r\n            const data = this.getFormData();\r\n            let inputs = data ? this.getInputs(data) : null;\r\n            if (inputs) {\r\n                inputs.forEach(inp => {\r\n                    document.querySelector('#ownForm form').appendChild(inp);\r\n                });\r\n                this.onSubmit();\r\n            } else {\r\n                alert('Выбраны не все значения!');\r\n            }\r\n        });\r\n        this._setupInputs();\r\n    }\r\n}\r\n\r\nlet activeModal = null;\r\n\r\nclass Modal {\r\n    constructor(selector, {onCall}) {\r\n        this.selector = selector;\r\n        this.el = document.querySelector(this.selector);\r\n        if (this.el) {\r\n            this.onCall = onCall || function(){};\r\n            this.overlay = this.el.querySelector('.modal__overlay');\r\n            this.closeBtn = this.el.querySelector('.modal__close');\r\n            this.setup();\r\n        }\r\n    }\r\n    showModal(disableAnimation = false) {\r\n        activeModal = this;\r\n        if (disableAnimation) {\r\n            this.el.classList.add('active');\r\n        } else {\r\n            this.el.classList.remove('hiding');\r\n            this.el.classList.add('active');\r\n            this.el.classList.add('showing');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('showing');\r\n            }, 250);\r\n        }\r\n        document.body.classList.add('lock');\r\n        this.onCall();\r\n    }\r\n    hideModal(disableAnimation = false) {\r\n        activeModal = null;\r\n        if (disableAnimation) {\r\n            this.el.classList.remove('active');\r\n        } else {\r\n            this.el.classList.remove('showing');\r\n            this.el.classList.add('hiding');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('active');\r\n                this.el.classList.remove('hiding');\r\n            }, 250);\r\n        }\r\n        document.body.classList.remove('lock');\r\n    }\r\n    showingHandler() {\r\n        this.el.classList.contains('active') ?\r\n            this.hideModal() :\r\n            this.showModal();\r\n    }\r\n    setup() {\r\n        this.closeBtn.addEventListener('click', (e) => {\r\n            this.hideModal();\r\n        });\r\n        this.overlay.addEventListener('mousedown', (e) => {\r\n            if (e.target === this.overlay) {\r\n                this.hideModal();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction sendForm(form, onSuccess = null) {\r\n    onSuccess = onSuccess || function(){};\r\n    event.preventDefault();\r\n    if (validateForm(form)) {\r\n        var xhr = new XMLHttpRequest();\r\n        var body = serialize(form);\r\n        console.log(body);\r\n        xhr.open('POST', './mail.php');\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4 && xhr.status == 200) {\r\n                form.reset();\r\n                onSuccess();\r\n                form.setAttribute('data-done', null);\r\n                if (form.hasAttribute('data-after')) {\r\n                    activeModal ? activeModal.hideModal() : void(0);\r\n                    const id = form.getAttribute('data-after');\r\n                    afterModals[id].showModal();\r\n                }\r\n            }\r\n        };\r\n        xhr.send(body);\r\n    } else {\r\n        alert('Введите корректные данные');\r\n    }\r\n}\r\nfunction validateForm(form) {\r\n\tvar regTel = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\tvar inputTel = form.querySelector('input[name=\"tel\"]');\r\n    var inputName = form.querySelector('input[name=\"name\"]');\r\n    var allow = true;\r\n    if (inputTel && !inputTel.value.match(regTel)) allow = false;\r\n    if (inputName && inputName.value.length < 2) allow = false;\r\n    return allow;\r\n}\r\nfunction serialize(form) {\r\n\tif (!form || form.nodeName !== \"FORM\") {\r\n\t\treturn false;\r\n\t}\r\n\tvar i, j, q = [];\r\n\tfor (i = form.elements.length - 1; i >= 0; i = i - 1) {\r\n\t\tif (form.elements[i].name === \"\") {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tswitch (form.elements[i].nodeName) {\r\n\t\t\tcase 'INPUT':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'text':\r\n\t\t\t\t\tcase 'tel':\r\n\t\t\t\t\tcase 'email':\r\n\t\t\t\t\tcase 'hidden':\r\n\t\t\t\t\tcase 'password':\r\n\t\t\t\t\tcase 'button':\r\n\t\t\t\t\tcase 'reset':\r\n\t\t\t\t\tcase 'submit':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\twriteCommaCheckbox(form, i, q);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'radio':\r\n\t\t\t\t\t\tif (form.elements[i].checked) {\r\n\t\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'file':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'TEXTAREA':\r\n\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SELECT':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'select-one':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'select-multiple':\r\n\t\t\t\t\t\tfor (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {\r\n\t\t\t\t\t\t\tif (form.elements[i].options[j].selected) {\r\n\t\t\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].options[j].value));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'BUTTON':\r\n\t\t\t\tswitch (form.elements[i].type) {\r\n\t\t\t\t\tcase 'reset':\r\n\t\t\t\t\tcase 'submit':\r\n\t\t\t\t\tcase 'button':\r\n\t\t\t\t\t\tq.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn q.join(\"&\");\r\n}\r\n\r\nconst ownModal = new Modal('#ownForm', {\r\n    onCall: function() {\r\n        const form = ownModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            ownModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst callModal = new Modal('#callMe', {\r\n    onCall: function() {\r\n        const form = callModal.el.querySelector('form');\r\n        if (form && form.hasAttribute('data-done')) {\r\n            callModal.hideModal(true);\r\n            const id = form.getAttribute('data-after');\r\n            afterModals[id].showModal();\r\n        }\r\n    }\r\n});\r\nconst thanksCalc = new Modal('#thanksCalc', {});\r\nconst thanksCall = new Modal('#thanksCall', {});\r\nconst afterModals = {\r\n    thanksCalc, thanksCall\r\n};\r\n\r\n\r\nconst ownGateForm = new GateForm('.own .gate-form', {\r\n    onSubmit: function() {\r\n        ownModal.showModal();\r\n    }\r\n});\r\n\r\nconst showModalCallBtn = document.querySelector('#showModalCall');\r\nshowModalCallBtn.addEventListener('click', function() {\r\n    callModal.showModal();\r\n});"],"file":"../main.min.js"}