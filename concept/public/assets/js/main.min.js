'use strict';
class Quiz {
    constructor({slider, ableOnSelect}) {
        this.selector = '.quiz';
        this.el = document.querySelector(this.selector);
        this.slider = slider;
        this.pages = this.el.querySelectorAll('.quiz__page');
        this.form = this.el.querySelector('.quiz__form');
        // this.labels = this.el.querySelectorAll('label.quiz-item');
        this.inputs = this.el.querySelectorAll('label.quiz-item input[type="radio"]');
        this.pageAllowed = 0;
        this.data = {};
        this.pageCount = this.pages.length;
        this.ableOnSelect = ableOnSelect || false;
        this.actions = {
            prev: document.querySelector('.quiz-actions__prev'),
            next: document.querySelector('.quiz-actions__next'),
        };
        this.progress = {
            current: 0,
            pageIdx: 0,
            step: 100 / (this.pageCount - 1),
            elem: document.querySelector('.progress-bar'),
            line: document.querySelector('.progress-bar .progress-bar__line'),
            lineCurrent: document.querySelector('.progress-bar .progress-bar__ready'),
        };
        this.setup();
    }
    progressUp() {
        this.progress.pageIdx++;
        this.progress.current += this.progress.step;
        const num = Math.round(this.progress.current);
        const output = num + '%';
        const el = this.progress.lineCurrent;
        el.style.width = output;
        el.setAttribute('data-tooltip', output);
        if (el.classList.contains('start')) {el.classList.remove('start');}
        if (num === 100) {el.classList.add('end');}
    }
    setupItems() {
        this.inputs.forEach(el => {
            el.addEventListener('change', () => {
                const page = el.closest('.quiz__page');
                const labels = page.querySelectorAll('label');
                const key = el.getAttribute('name');
                const value = el.getAttribute('value');
                labels.forEach(label => {label.classList.remove('active')});
                el.closest('label.quiz-item').classList.add('active');
                this.setData(key, value);

                this.pages.forEach((p, i) => {
                    if (p === page && this.pageAllowed <= i) {
                        this.pageAllowed++;
                        this.enableNext();

                    }
                });
            });
        }); 
    }
    getHiddenInputs() {
        const elems = [];
        for (let key in this.data) {
            const elem = document.createElement('input');
            elem.setAttribute('type', 'hidden');
            elem.setAttribute('name', key);
            elem.setAttribute('value', this.data[key]);
            elems.push(elem);
        }
        return elems;
    }
    finish() {
        const inputs = this.getHiddenInputs();
        this.form.append(...inputs);
    }
    setData(key, val) {
        this.data[key] = val;
    }
    disableNext() {
        this.actions.next.setAttribute('disabled', 'disabled');
    }
    enableNext() {
        this.actions.next.removeAttribute('disabled');
    }
    setup() {
        const quiz = this;
        quiz.actions.next.addEventListener('click', function(e) {
            quiz.slider.go( '+' );
            quiz.pageAllowed === quiz.slider.index ?
                quiz.disableNext() :
                quiz.enableNext();
        });
        quiz.actions.prev.addEventListener('click', function(e) {
            quiz.slider.go( '-' );
            quiz.enableNext();
        });
        quiz.slider.on('move', function(next, prev) {
            if (next === quiz.slider.length - 1) {
                document.querySelector('.quiz-actions').style.display = 'none';
                quiz.finish();
            }
            if (next > quiz.progress.pageIdx) {
                quiz.progressUp();
            }
        });

        if (this.ableOnSelect) {
            this.disableNext();
        }
        this.setupItems();
    }
}

class Modal {
    constructor({selector, onFirstOpen}) {
        this.selector = selector;
        this.triggers = document.querySelectorAll('.call-modal');
        this.el = document.querySelector(selector);
        this.closeBtn = this.el.querySelector('.modal__close');
        this.overlay = this.el.querySelector('.modal__overlay');
        this.opened = false;
        this.onFirstOpen = onFirstOpen;
        this.setup();
    }
    showModal() {
        this.el.classList.remove('hiding');
        this.el.classList.add('active');
        this.el.classList.add('showing');
        document.querySelector('.wrapper').classList.add('blured');
        setTimeout(() => {
            this.el.classList.remove('showing');
        }, 250);
    }
    hideModal() {
        this.el.classList.remove('showing');
        this.el.classList.add('hiding');
        setTimeout(() => {
            this.el.classList.remove('active');
            this.el.classList.remove('hiding');
        }, 250);
        document.querySelector('.wrapper').classList.remove('blured');
    }
    showingHandler() {
        this.el.classList.contains('active') ?
            this.hideModal() :
            this.showModal();
    }
    setup() {
        this.closeBtn.addEventListener('click', (e) => {
            this.hideModal();
        });
        this.overlay.addEventListener('click', (e) => {
            if (e.target === this.overlay) {
                this.hideModal();
            }
        })
        this.triggers.forEach((el) => {
            el.addEventListener('click', (e) => {
                this.showingHandler();
                if (!this.opened) {
                    this.onFirstOpen();
                    this.opened = true;
                }
            });
        });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const quiz = new Quiz({
        ableOnSelect: true,
        slider: new Splide('.splide.quiz', {
            arrows: false,
            perPage: 1,
            perMove: 1,
            pagination: false,
            drag: false,
            gap: 120,
            padding: 1,
        })
    });
    const modal = new Modal({
        selector: '.modal',
        onFirstOpen() {
            quiz.slider.mount();
        }
    });
});
//# sourceMappingURL=maps/main.min.js.map
