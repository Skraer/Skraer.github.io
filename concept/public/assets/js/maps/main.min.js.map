{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["'use strict';\r\nclass Quiz {\r\n    constructor({slider, ableOnSelect, onSubmit, onChangeSlide}) {\r\n        this.selector = '.quiz';\r\n        this.el = document.querySelector(this.selector);\r\n        this.slider = slider;\r\n        this.pages = this.el.querySelectorAll('.quiz__page');\r\n        this.form = this.el.querySelector('.quiz__form');\r\n        // this.labels = this.el.querySelectorAll('label.quiz-item');\r\n        this.inputs = this.el.querySelectorAll('label.quiz-item input[type=\"radio\"], label.quiz-item input[type=\"checkbox\"]');\r\n        this.pageAllowed = 0;\r\n        this.data = {};\r\n        this.pageCount = this.pages.length;\r\n        this.ableOnSelect = ableOnSelect || false;\r\n        this.onSubmit = onSubmit;\r\n        this.onChangeSlide = onChangeSlide;\r\n        this.actions = {\r\n            prev: document.querySelector('.quiz-actions__prev'),\r\n            next: document.querySelector('.quiz-actions__next'),\r\n        };\r\n        this.progress = {\r\n            current: 0,\r\n            pageIdx: 0,\r\n            step: 100 / (this.pageCount - 1),\r\n            elem: document.querySelector('.progress-bar'),\r\n            line: document.querySelector('.progress-bar .progress-bar__line'),\r\n            lineCurrent: document.querySelector('.progress-bar .progress-bar__ready'),\r\n        };\r\n        this.setup();\r\n    }\r\n    progressUp() {\r\n        this.progress.pageIdx++;\r\n        this.progress.current += this.progress.step;\r\n        const num = Math.round(this.progress.current);\r\n        const output = num + '%';\r\n        const el = this.progress.lineCurrent;\r\n        el.style.width = output;\r\n        el.setAttribute('data-tooltip', output);\r\n        if (el.classList.contains('start')) {el.classList.remove('start');}\r\n        if (num === 100) {el.classList.add('end');}\r\n    }\r\n    setupItems() {\r\n        this.inputs.forEach((el, idx) => {\r\n            el.addEventListener('change', () => {\r\n                const page = el.closest('.quiz__page');\r\n                const multiply = page.hasAttribute('data-multiply');\r\n                const labels = page.querySelectorAll('label');\r\n                const key = el.getAttribute('name');\r\n                const value = el.getAttribute('value');\r\n                if (!multiply) {\r\n                    labels.forEach(label => {label.classList.remove('active')});\r\n                    el.closest('label.quiz-item').classList.add('active');\r\n                    this.setData(key, value);\r\n                } else {\r\n                    el.closest('label.quiz-item').classList.toggle('active');\r\n                    el.checked ?\r\n                        this.setData(key, value, multiply) :\r\n                        this.setData(key, value, multiply, 'delete');\r\n                }\r\n\r\n                this.pages.forEach((p, i) => {\r\n                    if (p === page && this.pageAllowed <= i) {\r\n                        this.pageAllowed++;\r\n                        this.enableNext();\r\n\r\n                    }\r\n                });\r\n            });\r\n        }); \r\n    }\r\n    getHiddenInputs() {\r\n        const elems = [];\r\n        for (let key in this.data) {\r\n            const elem = document.createElement('input');\r\n            elem.setAttribute('type', 'hidden');\r\n            elem.setAttribute('name', key);\r\n            const value = typeof this.data[key] === 'string' ?\r\n                this.data[key] :\r\n                Array.from(this.data[key]).join(', ');\r\n            elem.setAttribute('value', value);\r\n            elems.push(elem);\r\n        }\r\n        return elems;\r\n    }\r\n    finish() {\r\n        const inputs = this.getHiddenInputs();\r\n        this.form.append(...inputs);\r\n    }\r\n    setData(key, val, multiply = false, action = 'add') {\r\n        if (!multiply) {\r\n            this.data[key] = val;\r\n        } else {\r\n            if (!this.data[key]) {\r\n                this.data[key] = new Set();\r\n            }\r\n            this.data[key][action](val);\r\n        }\r\n    }\r\n    disableNext() {\r\n        this.actions.next.setAttribute('disabled', 'disabled');\r\n    }\r\n    enableNext() {\r\n        this.actions.next.removeAttribute('disabled');\r\n    }\r\n    setup() {\r\n        const quiz = this;\r\n        quiz.actions.next.addEventListener('click', function(e) {\r\n            quiz.slider.go( '+' );\r\n            quiz.pageAllowed === quiz.slider.index ?\r\n                quiz.disableNext() :\r\n                quiz.enableNext();\r\n            quiz.onChangeSlide();\r\n        });\r\n        quiz.actions.prev.addEventListener('click', function(e) {\r\n            quiz.slider.go( '-' );\r\n            quiz.enableNext();\r\n            quiz.onChangeSlide();\r\n        });\r\n        quiz.slider.on('move', function(next, prev) {\r\n            if (next === quiz.slider.length - 1) {\r\n                document.querySelector('.quiz-actions').style.display = 'none';\r\n                quiz.finish();\r\n            }\r\n            if (next > quiz.progress.pageIdx) {\r\n                quiz.progressUp();\r\n            }\r\n        });\r\n\r\n        if (this.ableOnSelect) {\r\n            this.disableNext();\r\n        }\r\n        this.setupItems();\r\n\r\n        this.form.addEventListener('submit', (e) => {\r\n            if (this.onSubmit) {\r\n                e.preventDefault();\r\n                this.onSubmit();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass Modal {\r\n    constructor({selector, onFirstOpen}) {\r\n        this.selector = selector;\r\n        this.el = document.querySelector(selector);\r\n        this.triggers = document.querySelectorAll('.call-modal[data-target=\"' + this.el.getAttribute('id') + '\"]');\r\n        this.closeBtn = this.el.querySelector('.modal__close');\r\n        this.overlay = this.el.querySelector('.modal__overlay');\r\n        this.tooltips = this.el.querySelectorAll('.modal__tooltip-item');\r\n        this.opened = false;\r\n        this.onFirstOpen = onFirstOpen;\r\n        this.setup();\r\n    }\r\n    showModal(disableAnimation = false) {\r\n        if (disableAnimation) {\r\n            this.el.classList.add('active');\r\n        } else {\r\n            this.el.classList.remove('hiding');\r\n            this.el.classList.add('active');\r\n            this.el.classList.add('showing');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('showing');\r\n            }, 250);\r\n        }\r\n        document.querySelector('.wrapper').classList.add('blured');\r\n    }\r\n    hideModal(disableAnimation = false) {\r\n        if (disableAnimation) {\r\n            this.el.classList.remove('active');\r\n        } else {\r\n            this.el.classList.remove('showing');\r\n            this.el.classList.add('hiding');\r\n            setTimeout(() => {\r\n                this.el.classList.remove('active');\r\n                this.el.classList.remove('hiding');\r\n            }, 250);\r\n        }\r\n        document.querySelector('.wrapper').classList.remove('blured');\r\n    }\r\n    showingHandler() {\r\n        this.el.classList.contains('active') ?\r\n            this.hideModal() :\r\n            this.showModal();\r\n    }\r\n    setTooltip(idx) {\r\n        this.tooltips.forEach(el => {\r\n            el.classList.remove('active');\r\n        });\r\n        this.tooltips[idx].classList.add('active');\r\n        console.log(true);\r\n    }\r\n    setup() {\r\n        this.closeBtn.addEventListener('click', (e) => {\r\n            this.hideModal();\r\n        });\r\n        this.overlay.addEventListener('click', (e) => {\r\n            if (e.target === this.overlay) {\r\n                this.hideModal();\r\n            }\r\n        })\r\n        this.triggers.forEach((el) => {\r\n            el.addEventListener('click', (e) => {\r\n                this.showingHandler();\r\n                if (!this.opened) {\r\n                    this.onFirstOpen();\r\n                    this.opened = true;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nfunction sendForm(data) {\r\n    console.log(data);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const success = new Modal({\r\n        selector: '.modal--success'\r\n    });\r\n\r\n    const quiz = new Quiz({\r\n        ableOnSelect: true,\r\n        onSubmit() {\r\n            const phone = mask.unmaskedValue;\r\n            const name = quiz.form.querySelector('input[name=\"name\"]').value;\r\n            if (phone.length < 10 || name.length < 3) {\r\n                alert('Заполните поля');\r\n            } else {\r\n                const formData = {\r\n                    phone: '+' + phone,\r\n                    name: 'name'\r\n                };\r\n                sendForm(formData);\r\n                modal.hideModal(true);\r\n                success.showModal(true);\r\n            }\r\n\r\n        },\r\n        onChangeSlide() {\r\n            modal.setTooltip(quiz.slider.index);\r\n        },\r\n        slider: new Splide('.splide.quiz', {\r\n            arrows: false,\r\n            perPage: 1,\r\n            perMove: 1,\r\n            pagination: false,\r\n            drag: false,\r\n            gap: 120,\r\n            padding: 1,\r\n        })\r\n    });\r\n    const modal = new Modal({\r\n        selector: '.modal--quiz',\r\n        onFirstOpen() {\r\n            quiz.slider.mount();\r\n        }\r\n    });\r\n\r\n    const maskedElem = quiz.form.querySelector('input[type=\"tel\"]');\r\n    const maskOptions = {\r\n        mask: '+{7}(000)000-00-00',\r\n        lazy: false\r\n    };\r\n    const mask = IMask(maskedElem, maskOptions);\r\n    // unmaskedValue\r\n\r\n});"],"file":"../main.min.js"}