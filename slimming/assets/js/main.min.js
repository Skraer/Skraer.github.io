// var problemsOutput = document.querySelector('#problemsCount');
// var problemsSlider = document.querySelector('.problems__list');
var problemsSlider = new Splide('.splide-problems', {
    loop: false,
    perPage: 5,
    pagination: false,
    arrows: false,
    gap: 20,
    drag: false,
    swipeDistanceThreshold: 10,
});
var resultsSlider = new Splide('.splide-results', {
    loop: false,
    perPage: 2,
    perMove: 2,
    pagination: true,
    arrows: true,
    gap: 30,

});
var themesSlider = new Splide('.splide-themes', {
    loop: false,
    perPage: 5,
    // perMove: 2,
    pagination: true,
    arrows: true,
    gap: 20,
});
var reviewsSlider = new Splide('.splide-reviews', {
    loop: false,
    perPage: 3,
    perMove: 1,
    pagination: true,
    arrows: true,
    gap: 22,
    padding: 20,
});
var newsSlider = new Splide('.splide-news', {
    loop: false,
    perPage: 1,
    perMove: 1,
    pagination: true,
    arrows: true,
    // gap: 22,
});
problemsSlider.mount();
resultsSlider.mount();
themesSlider.mount();
reviewsSlider.mount();
newsSlider.mount();

var menuItems = document.querySelectorAll('.header .menu__link');

for (var i = 0; i < menuItems.length; i++) {
    var elem = menuItems[i];
    var handler = scrollHandler.bind(null, elem);
    elem.addEventListener('click', handler);
}
function scrollHandler(elem) {
    // if ($burger.classList.contains('active')) {
    //     closeMenu();
    // }
    var href = elem.getAttribute('href').substr(1);
    event.preventDefault();
    document.getElementById(href).scrollIntoView({block: "start", behavior: "smooth"});
}

var problems = {
    labels: document.querySelectorAll('.problems-card__cb'),
    checkboxes: document.querySelectorAll('.problems-card__cb input'),
    btn: document.querySelector('#problemsBtn'),
    info: document.querySelector('#problemsInfo'),
    output: document.querySelector('#problemsCount'),
    title: document.querySelector('.problems__title'),
    outputString: ' проблем',
    checkedCount: 0,
};
problems.defaultTitleContent = problems.title.innerHTML;
problems.readyTitleContent = problems.title.getAttribute('data-ready-text');
console.log(problems.defaultTitleContent);
console.log(problems.readyTitleContent);

for (var i = 0; i < problems.checkboxes.length; i++) {
    var selectCb = problemsHandler.bind(null, i);
    problems.checkboxes[i].addEventListener('change', selectCb);
}

function problemsHandler(ind) {
    if (problems.checkboxes[ind].checked) {
        problems.checkedCount++;
        problems.labels[ind].classList.add(getCheckedProblemsClassName());
    } else {
        problems.checkedCount--;
        problems.labels[ind].classList.remove(getCheckedProblemsClassName());
    }
    showProblemsCount();
}
function getCheckedProblemsClassName() {
    var className;
    if (problems.checkedCount < 3) {
        for (var j = 0; j < problems.labels.length; j++) {
            if (problems.labels[j].classList.contains('done')) {
                problems.labels[j].classList.remove('done');
                problems.labels[j].classList.add('active');
            }
        }
        className = 'active';
        problemsChangeState(false);
        toggleTitleContent('default');
    } else if (problems.checkedCount >= 3) {
        for (var j = 0; j < problems.labels.length; j++) {
            if (problems.labels[j].classList.contains('active')) {
                problems.labels[j].classList.remove('active');
                problems.labels[j].classList.add('done');
            }
        }
        className = 'done';
        problemsChangeState(true);
        toggleTitleContent('ready');
    } 
    toggleProblemsOutputClassName();
    return className;
}
function toggleTitleContent(state) {
    if (state === 'default') {
        problems.title.innerHTML = problems.defaultTitleContent;
        problems.title.classList.remove('ready');
    } else if (state === 'ready') {
        problems.title.innerHTML = problems.readyTitleContent;
        problems.title.classList.add('ready');
    }
}
function showProblemsCount() {
    switch (problems.checkedCount) {
        case 1:
            problems.outputString = ' проблема.';
            break;
        case 2:
        case 3:
        case 4:
            problems.outputString = ' проблемы.';
            break;
        default:
            problems.outputString = ' проблем.';
            break;
    }
    problems.output.textContent = problems.checkedCount + problems.outputString;
}
function toggleProblemsOutputClassName() {
    if (problems.checkedCount > 0) {
        problems.output.parentElement.classList.add('not-zero');
    } else {
        problems.output.parentElement.classList.remove('not-zero');
    }
}
function problemsChangeState(isReady) {
    if (isReady) {
        problems.info.classList.add('hidden');
        problems.btn.classList.remove('hidden');
        problems.title.classList.add('ready');
    } else {
        problems.btn.classList.add('hidden');
        problems.info.classList.remove('hidden');
        problems.title.classList.remove('is-ready');
    }
}

var quiz = {
    answers: document.querySelectorAll('.quiz__answer'),
    radio: document.querySelectorAll('.quiz__answer input'),
};
for (var i = 0; i < quiz.radio.length; i++) {
    console.log(i);
    var selectRadio = selectQuizRadio.bind(null, i);
    quiz.radio[i].addEventListener('change', selectRadio);
}
function selectQuizRadio(ind) {
    for (var j = 0; j < quiz.answers.length; j++) {
        quiz.answers[j].classList.remove('checked');
    }
    quiz.answers[ind].classList.add('checked');
}

//# sourceMappingURL=maps/main.min.js.map
