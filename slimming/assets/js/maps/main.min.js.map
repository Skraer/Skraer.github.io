{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function() {\r\n/* LIBRIARES */\r\nvar problemsSlider = new Splide('.splide-problems', {\r\n    loop: false,\r\n    perPage: 2,\r\n    arrows: false,\r\n    gap: 20,\r\n    padding: 20,\r\n    drag: true,\r\n    swipeDistanceThreshold: 10,\r\n    pagination: true,\r\n    breakpoints: {\r\n        2560: {\r\n            pagination: false,\r\n            drag: false,\r\n            perPage: 5,\r\n        },\r\n        1070: {\r\n            perPage: 4,\r\n        },\r\n        860: {\r\n            perPage: 3,\r\n        },\r\n        767: {\r\n            gap: 12,\r\n            fixedWidth: '210px',\r\n        },\r\n        479: {\r\n            focus: true,\r\n            fixedWidth: '210px',\r\n        }\r\n        \r\n    }\r\n});\r\nproblemsSlider.on('drag', function() {\r\n    var cards = document.querySelectorAll('.splide-problems .problems-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        cards[i].classList.add('is-shadow');\r\n    }\r\n});\r\nproblemsSlider.on('dragged', function() {\r\n    var cards = document.querySelectorAll('.splide-problems .problems-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        removeShadow(cards[i]);\r\n    }\r\n    function removeShadow(elem) {\r\n        setTimeout(function() {\r\n            elem.classList.remove('is-shadow');\r\n        }, 500);\r\n    }\r\n});\r\nvar resultsSlider = new Splide('.splide-results', {\r\n    loop: false,\r\n    perPage: 2,\r\n    perMove: 2,\r\n    pagination: true,\r\n    arrows: true,\r\n    gap: 30,\r\n    padding: 20,\r\n});\r\nif (document.documentElement.offsetWidth < 768) {\r\n    resultsSlider.destroy();\r\n} else {\r\n    resultsSlider.on('drag', function() {\r\n        var cards = document.querySelectorAll('.splide-results .results-card');\r\n        for (var i = 0; i < cards.length; i++) {\r\n            cards[i].classList.add('is-shadow');\r\n        }\r\n    });\r\n    resultsSlider.on('dragged', function() {\r\n        var cards = document.querySelectorAll('.splide-results .results-card');\r\n        for (var i = 0; i < cards.length; i++) {\r\n            removeShadow(cards[i]);\r\n        }\r\n        function removeShadow(elem) {\r\n            setTimeout(function() {\r\n                elem.classList.remove('is-shadow');\r\n            }, 500);\r\n        }\r\n    });\r\n}\r\nvar themesSlider = new Splide('.splide-themes', {\r\n    loop: false,\r\n    perPage: 5,\r\n    // perMove: 2,\r\n    pagination: true,\r\n    arrows: true,\r\n    gap: 20,\r\n    padding: 20,\r\n    breakpoints: {\r\n        1023: {\r\n            perPage: 4,\r\n        },\r\n        767: {\r\n            perPage: 3,\r\n        },\r\n        479: {\r\n            perPage: 2,\r\n            fixedWidth: '110px',\r\n            gap: 10\r\n        }\r\n    }\r\n});\r\nthemesSlider.on('drag', function() {\r\n    var cards = document.querySelectorAll('.splide-themes .themes-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        cards[i].classList.add('is-shadow');\r\n    }\r\n});\r\nthemesSlider.on('dragged', function() {\r\n    var cards = document.querySelectorAll('.splide-themes .themes-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        removeShadow(cards[i]);\r\n    }\r\n    function removeShadow(elem) {\r\n        setTimeout(function() {\r\n            elem.classList.remove('is-shadow');\r\n        }, 500);\r\n    }\r\n});\r\nvar reviewsSlider = new Splide('.splide-reviews', {\r\n    loop: false,\r\n    perPage: 3,\r\n    perMove: 1,\r\n    clones: 0,\r\n    pagination: true,\r\n    arrows: true,\r\n    gap: 22,\r\n    padding: 20,\r\n    breakpoints: {\r\n        1023: {\r\n            perPage: 2,\r\n        },\r\n        650: {\r\n            perPage: 1,\r\n            autoHeight: true\r\n        }\r\n    }\r\n});\r\nreviewsSlider.on('drag', function() {\r\n    var cards = document.querySelectorAll('.splide-reviews .reviews-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        cards[i].classList.add('is-shadow');\r\n    }\r\n});\r\nreviewsSlider.on('dragged', function() {\r\n    var cards = document.querySelectorAll('.splide-reviews .reviews-card');\r\n    for (var i = 0; i < cards.length; i++) {\r\n        removeShadow(cards[i]);\r\n    }\r\n    function removeShadow(elem) {\r\n        setTimeout(function() {\r\n            elem.classList.remove('is-shadow');\r\n        }, 500);\r\n    }\r\n});\r\nvar newsSlider = new Splide('.splide-news', {\r\n    loop: false,\r\n    perPage: 1,\r\n    perMove: 1,\r\n    pagination: true,\r\n    arrows: true,\r\n    // gap: 22,\r\n    breakpoints: {\r\n        600: {\r\n            perPage: 2,\r\n            // dragAngleThreshold: 1\r\n        },\r\n        450: {\r\n            perPage: 1\r\n        }\r\n    }\r\n});\r\nproblemsSlider.mount();\r\nresultsSlider.mount();\r\nthemesSlider.mount();\r\nreviewsSlider.mount();\r\nnewsSlider.mount();\r\n/* ======= */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* VARIABLES */\r\nvar header = document.querySelector('#header');\r\nvar wrapper = document.querySelector('.wrapper');\r\nvar burger = document.querySelector('#burger');\r\nvar headerMenu = document.querySelector('.header__bottom');\r\nvar headerMenuItems = document.querySelectorAll('.header .menu__link');\r\nvar footerMenuItems = document.querySelectorAll('.footer__nav-link');\r\nvar problems = {\r\n    cards: document.querySelectorAll('.problems-card'),\r\n    labels: document.querySelectorAll('.problems-card__cb'),\r\n    checkboxes: document.querySelectorAll('.problems-card__cb input'),\r\n    btn: document.querySelector('#problemsBtn'),\r\n    info: document.querySelector('#problemsInfo'),\r\n    output: document.querySelector('#problemsCount'),\r\n    title: document.querySelector('.problems__title'),\r\n    outputString: ' проблем',\r\n    checkedCount: 0,\r\n};\r\nvar quiz = {\r\n    questionTitles: document.querySelectorAll('.quiz__question'),\r\n    count: document.querySelector('.quiz__count'),\r\n    contents: document.querySelectorAll('.quiz__answers'),\r\n    answers: document.querySelectorAll('.quiz__answer'),\r\n    radio: document.querySelectorAll('.quiz__answer input'),\r\n    labels: document.querySelectorAll('.quiz__radio-label'),\r\n    btn: document.querySelector('.quiz__btn'),\r\n    request: document.querySelector('.quiz .request'),\r\n    page: 0,\r\n};\r\nvar quizData = {};\r\nvar request = {\r\n    checkboxes: document.querySelectorAll('.request__cb'),\r\n    labels: document.querySelectorAll('.request__policy-label'),\r\n};\r\nvar results = {\r\n    btn: document.querySelector('#moreResults'),\r\n    cards: document.querySelectorAll('.results-card'),\r\n    isHidden: false,\r\n    visibleCount: 2,\r\n    cardTexts: [],\r\n};\r\nvar news = {\r\n    items: document.querySelectorAll('.news-grid__item'),\r\n    sliderList: document.querySelector('.news__slider .news__list'),\r\n};\r\nvar btnsCallPopup = document.querySelectorAll('[data-call-popup]');\r\nvar popupElem = document.querySelector('#popup');\r\nvar scrollPrev = 0;\r\nvar headerHeight = parseInt(header.getBoundingClientRect().height);\r\n\r\n\r\n\r\n/* FUNCTIONS */\r\nfunction setupHeader() {\r\n    headerHeight = parseInt(header.getBoundingClientRect().height);\r\n    wrapper.style.paddingTop = headerHeight + 'px';\r\n}\r\nfunction stickHeader() {\r\n    var scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > headerHeight && scrolled > scrollPrev) {\r\n        header.classList.remove('shown');\r\n        header.classList.add('hidden');\r\n        setupHeader();\r\n    } else {\r\n        header.classList.remove('hidden');\r\n        header.classList.add('shown');\r\n        setupHeader();\r\n    }\r\n    scrollPrev = scrolled;\r\n}\r\nfunction menuHandler() {\r\n    if (burger.classList.contains('active')) {\r\n        hideMenu();\r\n    } else {\r\n        showMenu();\r\n    }\r\n}\r\nfunction showMenu() {\r\n    burger.classList.add('active');\r\n    headerMenu.classList.add('active');\r\n}\r\nfunction hideMenu() {\r\n    burger.classList.remove('active');\r\n    headerMenu.classList.remove('active');\r\n}\r\nfunction scrollHandler(elem) {\r\n    var href = elem.getAttribute('href').substr(1);\r\n    event.preventDefault();\r\n    document.getElementById(href).scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n    burger.classList.remove('active');\r\n    headerMenu.classList.remove('active');\r\n}\r\nfunction problemsHandler(ind) {\r\n    if (problems.checkboxes[ind].checked) {\r\n        problems.checkedCount++;\r\n        problems.labels[ind].classList.add(getCheckedProblemsClassName());\r\n    } else {\r\n        problems.checkedCount--;\r\n        problems.labels[ind].classList.remove(getCheckedProblemsClassName());\r\n    }\r\n    showProblemsCount();\r\n}\r\nfunction getCheckedProblemsClassName() {\r\n    var className;\r\n    if (problems.checkedCount < 3) {\r\n        for (var j = 0; j < problems.labels.length; j++) {\r\n            if (problems.labels[j].classList.contains('done')) {\r\n                problems.labels[j].classList.remove('done');\r\n                problems.labels[j].classList.add('active');\r\n            }\r\n        }\r\n        className = 'active';\r\n        problemsChangeState(false);\r\n        toggleTitleContent('default');\r\n    } else if (problems.checkedCount >= 3) {\r\n        for (var j = 0; j < problems.labels.length; j++) {\r\n            if (problems.labels[j].classList.contains('active')) {\r\n                problems.labels[j].classList.remove('active');\r\n                problems.labels[j].classList.add('done');\r\n            }\r\n        }\r\n        className = 'done';\r\n        problemsChangeState(true);\r\n        toggleTitleContent('ready');\r\n    } \r\n    toggleProblemsOutputClassName();\r\n    return className;\r\n}\r\nfunction toggleTitleContent(state) {\r\n    if (state === 'default') {\r\n        problems.title.innerHTML = problems.defaultTitleContent;\r\n        problems.title.classList.remove('ready');\r\n    } else if (state === 'ready') {\r\n        problems.title.innerHTML = problems.readyTitleContent;\r\n        problems.title.classList.add('ready');\r\n    }\r\n}\r\nfunction showProblemsCount() {\r\n    switch (problems.checkedCount) {\r\n        case 1:\r\n            problems.outputString = ' проблема.';\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n            problems.outputString = ' проблемы.';\r\n            break;\r\n        default:\r\n            problems.outputString = ' проблем.';\r\n            break;\r\n    }\r\n    problems.output.textContent = problems.checkedCount + problems.outputString;\r\n}\r\nfunction toggleProblemsOutputClassName() {\r\n    if (problems.checkedCount > 0) {\r\n        problems.output.parentElement.classList.add('not-zero');\r\n    } else {\r\n        problems.output.parentElement.classList.remove('not-zero');\r\n    }\r\n}\r\nfunction problemsChangeState(isReady) {\r\n    if (isReady) {\r\n        problems.info.classList.add('hidden');\r\n        problems.btn.classList.remove('hidden');\r\n        problems.title.classList.add('ready');\r\n    } else {\r\n        problems.btn.classList.add('hidden');\r\n        problems.info.classList.remove('hidden');\r\n        problems.title.classList.remove('is-ready');\r\n    }\r\n}\r\nfunction radioHandler(itemList, radioList) {\r\n    for (var i = 0; i < itemList.length; i++) {\r\n        var select = selectRadio.bind(null, i);\r\n        var handler = selectItem.bind(null, i);\r\n        itemList[i].addEventListener('click', select);\r\n        itemList[i].addEventListener('change', handler);\r\n    }\r\n    function selectItem(ind) {\r\n        for (var j = 0; j < itemList.length; j++) {\r\n            itemList[j].classList.remove('checked');\r\n        }\r\n        itemList[ind].classList.add('checked');\r\n    }\r\n    function selectRadio(ind) {\r\n        radioList[ind].checked = true;\r\n        selectItem(ind);\r\n    }\r\n}\r\nfunction requestCbHandler(cb, label) {\r\n    if (cb.checked) {\r\n        label.classList.add('checked');\r\n    } else {\r\n        label.classList.remove('checked');\r\n    }\r\n}\r\nfunction showOrHideMoreResults(visibleCount = 0) {\r\n    if (results.isHidden) {\r\n        for (var i = 0; i < results.cards.length; i++) {\r\n            results.cards[i].classList.remove('hidden');\r\n            results.btn.textContent = 'скрыть';\r\n        }\r\n    } else {\r\n        for (var i = visibleCount; i < results.cards.length; i++) {\r\n            results.cards[i].classList.add('hidden');\r\n            results.btn.textContent = 'показать еще';\r\n        }\r\n    }\r\n    results.isHidden = !results.isHidden;\r\n}\r\nfunction expandCard(ind) {\r\n    var textElem = results.cards[ind].querySelector('.results-card__text');\r\n    var text = results.cardTexts[ind];\r\n    insertTextInCard(text, textElem);\r\n    results.cards[ind].classList.remove('closed');\r\n    results.cards[ind].classList.add('opened');\r\n}\r\nfunction rollUpCard(ind) {\r\n    var textElem = results.cards[ind].querySelector('.results-card__text');\r\n    var length = textElem.getAttribute('data-cutted-length');\r\n    var cuttedText = results.cardTexts[ind].split(' ').slice(0, length - 2).join(' ') + ' ...';\r\n    insertTextInCard(cuttedText, textElem);\r\n    results.cards[ind].classList.remove('opened');\r\n    results.cards[ind].classList.add('closed');\r\n}\r\nfunction insertTextInCard(text, textElem) {\r\n    var span = document.createElement('span');\r\n    span.textContent = text;\r\n    textElem.innerHTML = '';\r\n    textElem.appendChild(span);\r\n}\r\nfunction setupCardContent(ind) {\r\n    var textElem = results.cards[ind].querySelector('.results-card__text');\r\n    var result = checkStringLength(5, ind, textElem);\r\n    if (result.isMore) {\r\n        textElem.setAttribute('data-cutted-length', result.length);\r\n        results.cards[ind].classList.add('closed');\r\n    }\r\n}\r\nfunction checkStringLength(num, ind, textElem) {\r\n    var text = results.cardTexts[ind];\r\n    var textArr = text.split(' ');\r\n    var resultText = '';\r\n\r\n    var span = document.createElement('span');\r\n    for (var k = 0; k < textArr.length; k++) {\r\n        resultText += textArr[k] + ' ';\r\n        textElem.innerHTML = '';\r\n        span.textContent = resultText;\r\n        textElem.appendChild(span);\r\n        if (span.getClientRects().length >= num) {\r\n            span.textContent = text;\r\n            textElem.innerHTML = '';\r\n            textElem.appendChild(span);\r\n            return {\r\n                isMore: true,\r\n                length: k\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        isMore: false,\r\n        length: k\r\n    };\r\n}\r\nfunction expandAllCards() {\r\n    for (var i = 0; i < results.cards.length; i++) {expandCard(i);}\r\n}\r\nfunction rollUpAllCards() {\r\n    for (var i = 0; i < results.cards.length; i++) {rollUpCard(i);}\r\n}\r\nfunction cardContentHandler(ind) {\r\n    if (results.cards[ind].classList.contains('closed')) {\r\n        expandCard(ind);\r\n    } else if (results.cards[ind].classList.contains('opened')) {\r\n        rollUpCard(ind);\r\n    }\r\n}\r\nfunction popupBtnHandler(elem) {\r\n    if (elem.classList.contains('hidden')) {\r\n        elem.classList.remove('hidden');\r\n        document.body.classList.add('lock');\r\n    } else {\r\n        elem.classList.add('hidden');\r\n        document.body.classList.remove('lock');\r\n    }\r\n}\r\nfunction popupOverlayHandler(elem) {\r\n    if (event.target.classList.contains('popup') || event.target.classList.contains('popup__close')) {\r\n        popupBtnHandler(elem);\r\n    }\r\n}\r\nfunction selectCheckbox(ind) {\r\n    if (event.target !== problems.labels[ind]) {\r\n        problems.checkboxes[ind].click();\r\n    }\r\n}\r\nfunction setupQuiz() {\r\n    quiz.total = quiz.contents.length + 1;\r\n    quiz.request.classList.remove('active');\r\n    for (var i = 0; i < quiz.questionTitles.length; i++) {\r\n        quiz.questionTitles[i].textContent = (i + 1) + ' ' + quiz.questionTitles[i].textContent;\r\n    }\r\n    showCurrentQuizPage();\r\n}\r\nfunction showCurrentQuizPage() {\r\n    hideAllQuizPages();\r\n    quiz.questionTitles[quiz.page].classList.add('active');\r\n    quiz.contents[quiz.page].classList.add('active');\r\n    quiz.count.textContent = (quiz.page+1) + '/' + quiz.total;\r\n}\r\nfunction hideAllQuizPages() {\r\n    for (var i = 0; i < quiz.contents.length; i++) {\r\n        quiz.questionTitles[i].classList.remove('active');\r\n        quiz.contents[i].classList.remove('active');\r\n    }\r\n}\r\nfunction isAllowIncreaseQuiz() {\r\n    var radio = document.querySelectorAll('.quiz__answers.active input[type=\"radio\"]');\r\n    for (var i = 0; i < radio.length; i++) {\r\n        if (radio[i].checked) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction increaseQuizPage() {\r\n    if (quiz.page < quiz.total-2 && isAllowIncreaseQuiz()) {\r\n        quiz.page++;\r\n        showCurrentQuizPage();\r\n    } else if (quiz.page === quiz.total-2 && isAllowIncreaseQuiz()) {\r\n        hideAllQuizPages();\r\n        quiz.count.textContent = quiz.total + '/' + quiz.total;\r\n        quiz.btn.classList.add('hidden');\r\n        quiz.request.classList.add('active');\r\n    } else {\r\n        alert('Выберите один из вариантов ответа');\r\n    }\r\n}\r\n/* ========= */\r\n\r\n\r\n\r\n\r\n/* HANDLERS */\r\nsetupHeader();\r\nradioHandler(quiz.answers, quiz.radio);\r\nsetupQuiz();\r\n\r\n\r\n\r\nquiz.btn.addEventListener('click', increaseQuizPage);\r\nwindow.addEventListener('scroll', stickHeader);\r\nwindow.addEventListener('resize', stickHeader);\r\nburger.addEventListener('click', menuHandler);\r\n\r\n\r\nfor (var i = 0; i < headerMenuItems.length; i++) {\r\n    var elem = headerMenuItems[i];\r\n    elem.addEventListener('click', scrollHandler.bind(null, elem));\r\n}\r\nfor (var i = 0; i < footerMenuItems.length; i++) {\r\n    var elem = footerMenuItems[i];\r\n    elem.addEventListener('click', scrollHandler.bind(null, elem));\r\n}\r\n\r\nproblems.defaultTitleContent = problems.title.innerHTML;\r\nproblems.readyTitleContent = problems.title.getAttribute('data-ready-text');\r\n\r\nfor (var i = 0; i < problems.cards.length; i++) {\r\n    var handler = problemsHandler.bind(null, i);\r\n    problems.checkboxes[i].addEventListener('change', handler);\r\n    var selectCb = selectCheckbox.bind(null, i);\r\n    problems.cards[i].addEventListener('click', selectCb);\r\n}\r\n\r\n\r\n/* QUIZ */\r\n\r\n\r\nfor (var i = 0; i < request.checkboxes.length; i++) {\r\n    var handler = requestCbHandler.bind(null, request.checkboxes[i], request.labels[i]);\r\n    request.checkboxes[i].addEventListener('click', handler);\r\n}\r\n\r\nfor (var i = 0; i < results.cards.length; i++) {\r\n    var textElem = results.cards[i].querySelector('.results-card__text');\r\n    results.cardTexts.push(textElem.textContent);\r\n}\r\n\r\nif (document.documentElement.offsetWidth < 768) {\r\n    for (var i = 0; i < results.cards.length; i++) {\r\n        setupCardContent(i);\r\n        if (results.cards[i].querySelector('.results-card__text').hasAttribute('data-cutted-length')) {\r\n            var cardHandler = cardContentHandler.bind(null, i);\r\n            results.cards[i].addEventListener('click', cardHandler);\r\n            rollUpCard(i);\r\n        }\r\n    }\r\n    results.btn.addEventListener('click', showOrHideMoreResults.bind(null, results.visibleCount));\r\n    showOrHideMoreResults(2);\r\n}\r\n\r\n/* NEWS */\r\n\r\nif (document.documentElement.offsetWidth <= 600) {\r\n    // news.slides = document.querySelectorAll('.news-grid');\r\n    for (var i = -1; i < newsSlider.length; i++) {\r\n        newsSlider.remove(i);\r\n    }\r\n    for (var i = 0; i < news.items.length; i++) {\r\n        var elem = news.items[i];\r\n        elem.classList.remove('news-grid__item--left-bottom');\r\n        elem.classList.remove('news-grid__item--large');\r\n        elem.classList.remove('news-grid__item--condensed');\r\n        var html = '<li class=\"splide__slide news__slide\">' + elem.outerHTML + '</li>';\r\n        newsSlider.add(html, -1);\r\n    }\r\n}\r\n\r\npopupElem.addEventListener('mousedown', popupOverlayHandler.bind(null, popupElem));\r\nfor (var i = 0; i < btnsCallPopup.length; i++) {\r\n    var elem = document.querySelector(btnsCallPopup[i].getAttribute('data-call-popup'));\r\n    var handler = popupBtnHandler.bind(null, elem);\r\n    btnsCallPopup[i].addEventListener('click', handler);\r\n}\r\n\r\n\r\n\r\n})();"],"file":"../main.min.js"}