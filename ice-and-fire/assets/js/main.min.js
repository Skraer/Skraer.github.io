function nodeExist(selector) {
    return document.querySelector(selector) !== null;
}

class Tabs {
    constructor({tabSelector, onInit}) {
        this.selector = tabSelector;
        this.tabs = document.querySelectorAll(tabSelector);
        this.inputs = document.querySelectorAll(tabSelector + ' input');
        this.data = {
            activeIdx: null,
            activeValue: null
        };
        this.isInit = false;
        this.onInit = onInit ? onInit.bind(this) : function(){return false};
        this.setup();
    }
    resetTabs() {
        this.tabs.forEach(function(el) {
            el.classList.remove('active');
        });
    }
    _onInit() {
        if (this.onInit()) {
            this.onInit();
        }
    }
    setup() {
        if (document.querySelector(this.selector) !== null) {
            this.inputs.forEach((el, idx) => {
                el.addEventListener('change', (e) => {
                    this.data = {activeIdx:idx, activeValue:el.value};
                    this.resetTabs();
                    this.tabs[idx].classList.add('active');
                });
            });
            this.isInit = true;
            this._onInit();
        }
        if (!this.isInit) {
            console.error('Tabs is not inited. Something wrong');
        }
    }
}

class MenuCatalog {
    constructor({menuSelector}) {
        this.menuSelector = menuSelector;
        this.menuRoot = document.querySelector(menuSelector);
        this.menuBtn = this.menuRoot.querySelector('a');
        this.setup();
    }
    setup() {
        if (this.menuRoot !== null) {
            const root = this.menuRoot;
            const btn = this.menuBtn;
            const selector = this.menuSelector;

            root.addEventListener('click', function(e) {
                e.preventDefault();
                if (e.target.closest('a') === btn) {
                    root.classList.contains('active') ?
                        root.classList.remove('active') :
                        root.classList.add('active');
                }

            });
            document.addEventListener('click', function(e) {
                if (e.target.closest(selector) !== root) {
                    root.classList.remove('active');
                }
            });
        }
    }
}

class ProductCards {
    constructor({cardSelector}) {
        this.cardSelector = cardSelector;
        this.cardElems = document.querySelectorAll(this.cardSelector);
        this.setup();
    }
    addToCartHandler() {

    }
    setup() {
        if (this.cardElems.length > 0) {
            this.cardElems.forEach((el, idx) => {
                const addBtn = el.querySelector(this.cardSelector + '__add');
                addBtn.onclick = () => {el.classList.toggle('in-cart')};
            });
        }
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const navMenuLinks = document.querySelectorAll('.nav-list .nav-list__item a');
    navMenuLinks.forEach(function(el) {
        if (window.location.pathname.indexOf(el.getAttribute('href')) > -1) {
            el.closest('.nav-list__item').classList.add('current');
        } else if ((window.location.pathname === '' || window.location.pathname === '/') && el.getAttribute('href').indexOf('index') > -1) {
            el.closest('.nav-list__item').classList.add('current');
        }
    });

    const productsTabs = new Tabs({
        tabSelector: '.products__category-tab',
    });
    const productsGridTabs = new Tabs({tabSelector: '.products__type-tab'});
    
    const headerCatalog = new MenuCatalog({
        menuSelector: '.header__menu'
    });

    const productCards = new ProductCards({
        cardSelector: '.product-card'
    });
    
    const brandsSlider = new Splide('.brands__slider.splide', {
        type: 'loop',
        perPage: 4,
        perMove: 1,
        pagination: false
    }).mount();
});

//# sourceMappingURL=maps/main.min.js.map
